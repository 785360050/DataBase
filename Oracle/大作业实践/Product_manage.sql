
-- VIEW PRODUCT_QUANTITY: 各类产品库存和采购数量
CREATE OR REPLACE VIEW PRODUCT_QUANTITY
AS
    SELECT PRODUCT.PROID,PRONAME,STIQTY,INSQTY
    FROM PROBUY,PRODUCT
    WHERE PRODUCT.PROID=PROBUY.PROID;

DROP VIEW PRODUCT_QUANTITY;


-- VIEW PRODUCT_QUANTITY_LACK: 各类产品需求总数
CREATE OR REPLACE VIEW PRODUCT_QUANTITY_LACK
AS
    SELECT PROID,SUM(QTY) AS LACK FROM ORD GROUP BY PROID; 

DROP VIEW PRODUCT_QUANTITY_LACK;

-- VIEW PRODUCT_QUANTITY_PROCESSING: 各类产品当前的正在生产所需的数量
CREATE OR REPLACE VIEW PRODUCT_QUANTITY_PROCESSING
AS
    SELECT PROID,SUM(QTY) AS PROCESSING FROM WIP
    GROUP BY PROID
    ORDER BY PROID;

SELECT * FROM PRODUCT_QUANTITY;
SELECT * FROM PRODUCT_QUANTITY_LACK;
SELECT * FROM PRODUCT_QUANTITY_PROCESSING;


DROP VIEW PRODUCT_QUANTITY;
DROP VIEW PRODUCT_QUANTITY_LACK;
DROP VIEW PRODUCT_QUANTITY_PROCESSING;


------------------------------------------------------------------
-- VIEW PRODUCT_QUANTITY_INFO: 产品当前数量信息，用于判断是否可直接发货，或缺少原材料
------------------------------------------------------------------
CREATE OR REPLACE VIEW PRODUCT_QUANTITY_INFO
AS
    SELECT 
    PRODUCT_QUANTITY.PROID,
    PRONAME,
    STIQTY,
    PRODUCT_QUANTITY_LACK.LACK-INSQTY+STIQTY-PROCESSING AS LACK --当前缺货(订单总量)-库存+当前正在用于生产量
    FROM PRODUCT_QUANTITY,PRODUCT_QUANTITY_LACK,PRODUCT_QUANTITY_PROCESSING
    WHERE 
        PRODUCT_QUANTITY.PROID=PRODUCT_QUANTITY_LACK.PROID
        AND
        PRODUCT_QUANTITY.PROID=PRODUCT_QUANTITY_PROCESSING.PROID
    ORDER BY PROID;

SELECT * FROM PRODUCT_QUANTITY_INFO;
DROP VIEW PRODUCT_QUANTITY_INFO;
------------------------------------------------------------------
-- PROCEDURE SHOW_PRODUCT_LACK_INFO: 采购科查询产品缺少数量
------------------------------------------------------------------

SELECT PROID,PRONAME,LACK FROM PRODUCT_QUANTITY_INFO WHERE LACK>0;

CREATE OR REPLACE PROCEDURE SHOW_PRODUCT_LACK_INFO
AS 
    CURSOR CUR IS SELECT PRONAME,LACK FROM PRODUCT_QUANTITY_INFO WHERE LACK>0;
    NA PRODUCT_QUANTITY_INFO.PRONAME%TYPE;
    NUM PRODUCT_QUANTITY_INFO.LACK%TYPE;
BEGIN
    FOR C IN CUR 
    LOOP
        BEGIN
            DBMS_OUTPUT.PUT_LINE('NAME: '||C.PRONAME||' '||'COUNT: '||C.LACK);
        END;
    END LOOP;
END;

EXECUTE SHOW_PRODUCT_LACK_INFO;

DROP PROCEDURE SHOW_PRODUCT_LACK_INFO;

GRANT EXECUTE ON SHOW_PRODUCT_LACK_INFO TO ABEL,ALAN,BARD,BEAU; 

------------------------------------------------------------------
-- TRIGGER UPDATE_STIQTY: 仓管入库产品，更新PROBUY库存信息
------------------------------------------------------------------

alter table STOCK  disable constraint FK_STOCK_REFERENCE_PRODUCT   CASCADE;
alter table STOCK  disable constraint PK_STOCK   CASCADE;

-- 利用触发器同步更新关联的数据
UPDATE STOCK SET STIQTY=STIQTY-10 WHERE PROID='P002';
UPDATE PROBUY SET STIQTY=STIQTY-20 WHERE PROID='P005';

alter table STOCK enable constraint FK_STOCK_REFERENCE_PRODUCT;
alter table STOCK enable constraint PK_STOCK;

SELECT * FROM STOCK;
SELECT * FROM PROBUY;

CREATE OR REPLACE TRIGGER UPDATE_STIQTY
AFTER
    UPDATE OF STIQTY ON STOCK FOR EACH ROW
BEGIN
    UPDATE PROBUY SET STIQTY=:NEW.STIQTY WHERE PROID=:OLD.PROID;
END;

------------------------------------------------------------------
-- TRIGGER DELETE_ORD: 取消订单,同步删除发票
------------------------------------------------------------------

SELECT * FROM ORD;
SELECT * FROM INVOICE;

-- 利用触发器同步删除发票记录

alter table INVOICE  disable constraint FK_INVOICE_REFERENCE_ORD   CASCADE;
alter table INVOICE  ENABLE constraint FK_INVOICE_REFERENCE_ORD;

CREATE OR REPLACE TRIGGER DELETE_ORD
AFTER
    DELETE ON ORD FOR EACH ROW
DECLARE
    ID ORD.ORDID%TYPE;
BEGIN
    DELETE FROM INVOICE WHERE ORDID=:OLD.ORDID;
END;
DROP TRIGGER DELETE_ORD;
DELETE FROM ORD WHERE ORDID='CR04';
------------------------------------------------------------------
-- PROCEDURE SHOW_AVAILABLE_ORDER: 生产管理科查询可交付的订单
------------------------------------------------------------------
CREATE OR REPLACE PROCEDURE SHOW_AVAILABLE_ORDER
AS
    CURSOR CUR IS 
        SELECT ORDID,CUSTID,ORD.PROID,QTY,STIQTY,ORDDATE,D_DATE
        FROM ORD,STOCK
        WHERE ORD.PROID=STOCK.PROID AND STIQTY-QTY>=0;
BEGIN
    FOR C IN CUR 
    LOOP
        BEGIN
            DBMS_OUTPUT.PUT_LINE
            ('ORDID: '||C.ORDID||' '||'CUSTID: '||C.CUSTID||'PROID: '||C.PROID||' '||'QTY: '||C.QTY||' '||'STIQTY: '||C.STIQTY);
        END;
    END LOOP;
END;

EXECUTE SHOW_AVAILABLE_ORDER;
DROP PROCEDURE SHOW_AVAILABLE_ORDER;

SELECT * FROM PRODUCT;

INSERT INTO PRODUCT VALUES('P006','网卡');
DELETE FROM PRODUCT WHERE PROID='P006';

GRANT EXECUTE ON SHOW_AVAILABLE_ORDER TO ABEL,ALAN,DES,FORD;

------------------------------------------------------------------
-- INDEX: 查询订单对应的产品
-- 加快订单产品信息的读取速度，减缓修改速度
------------------------------------------------------------------
SELECT * FROM ORD;
CREATE INDEX ORDER_PRODUCT ON ORD(ORDID,PROID);


----
SELECT * FROM INVOICE;
SELECT * FROM DELIVERY;
SELECT * FROM STOCK;

------------------------------------------------------------------
-- FUNCTION STOCK_QUANTITY: 查询剩余库存空间
------------------------------------------------------------------

CREATE OR REPLACE FUNCTION STOCK_QUANTITY
RETURN STOCK.STIQTY%TYPE
AS
    CNT STOCK.STIQTY%TYPE;
BEGIN
   SELECT SUM(STIQTY) INTO CNT FROM STOCK;
   RETURN(500-CNT);
END;

DROP FUNCTION STOCK_QUANTITY;

DECLARE
    CNT STOCK.STIQTY%TYPE;
BEGIN
    CNT:=STOCK_QUANTITY;
    DBMS_OUTPUT.PUT_LINE(CNT);
END;

GRANT EXECUTE ON STOCK_QUANTITY TO ABEL,ALAN,DES;
------------------------------------------------------------------
-- TRIGGER STOCK_DEFENCE: 防止库存数量小于0
------------------------------------------------------------------
CREATE OR REPLACE TRIGGER STOCK_DEFENCE
BEFORE
    UPDATE OF STIQTY ON STOCK FOR EACH ROW
BEGIN
    IF :NEW.STIQTY<0
    THEN
        DBMS_OUTPUT.PUT_LINE('库存<0'); --VSCODE无显示
        :NEW.STIQTY:=:OLD.STIQTY;
    END IF;
END;
DROP TRIGGER STOCK_DEFENCE;

SELECT * FROM STOCK;
UPDATE STOCK SET STIQTY=STIQTY-20 WHERE PROID='P002';

















































































































































------------------------------------------------------------------
-- TRIGGER STOCK_ALERT: 更新库存时显示剩余库存空间  //BUG
------------------------------------------------------------------
CREATE OR REPLACE TRIGGER STOCK_ALERT
BEFORE
    UPDATE OF STIQTY ON STOCK FOR EACH ROW
DECLARE
    CNT STOCK.STIQTY%TYPE;
    --PRAGMA AUTONOMOUS_TRANSACTION;
BEGIN
    CNT:=STOCK_QUANTITY;
    IF CNT>=500
    THEN
        DBMS_OUTPUT.PUT_LINE('仓库无空间');
    ELSE
        DBMS_OUTPUT.PUT_LINE('仓库剩余容量：'||to_char(500-CNT));
    END IF;
END;
DROP TRIGGER STOCK_ALERT;

UPDATE STOCK SET STIQTY=STIQTY-10 WHERE PROID='P002';

SELECT * FROM STOCK;


------------------------------------------------------------------
-- TRIGGER ARRIVAL_ANNOUNCEMENT: //BUG
-- 删除同一CARNO后触发，输出所有删除记录的PROID
------------------------------------------------------------------


CREATE OR REPLACE TRIGGER ARRIVAL_ANNOUNCEMENT
BEFORE
    DELETE ON DELIVERY FOR EACH ROW
DECLARE
    CURSOR CUR IS SELECT DELIVERY.PROID FROM DELIVERY WHERE CARNO=:OLD.CARNO;
    PRAGMA AUTONOMOUS_TRANSACTION;
BEGIN
    FOR C IN CUR 
    LOOP
        BEGIN
            DBMS_OUTPUT.PUT_LINE('PROID: '||C.PROID);
        END;
    END LOOP;
END;

CREATE OR REPLACE TRIGGER ARRIVAL_ANNOUNCEMENT
BEFORE
    DELETE ON DELIVERY FOR EACH ROW
DECLARE
    ID DELIVERY.PROID%TYPE;
    -- PRAGMA AUTONOMOUS_TRANSACTION;
BEGIN
    SELECT PROID INTO ID FROM DELIVERY WHERE PROID=:OLD.PROID;
    LOOP
        BEGIN
            DBMS_OUTPUT.PUT_LINE('PROID: '||ID);
        END;
    END LOOP;
END;

DROP TRIGGER ARRIVAL_ANNOUNCEMENT;
SELECT * FROM DELIVERY;
DELETE FROM DELIVERY WHERE CARNO='A1-1113';


